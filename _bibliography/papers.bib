---
---
@InProceedings{Hanou2023moving,
  author           = {Issa Hanou and Jesse Mulderij and Mathijs De Weerdt},
  title            = {Moving Trains Like Pebbles: a Feasibility Study on Tree Yards},
  booktitle        = {Proceedings of the Thirty-Third International Conference on Automated Planning and Scheduling},
  volume           = {33},
  year             = {2023},
  abstract         = {The Train Unit Shunting Problem concerns the parking of trains outside their scheduled use on so-called shunting yards. This is an NP-hard problem, and the current algorithm used by the Netherlands Railways cannot detect whether an instance is infeasible. So, infeasible instances can cause needlessly long computation times. Therefore, this paper fills the gap by providing novel approaches to determine the feasibility. For this, the Pebble Motion problem is considered which moves pebbles from their starting node to their goal node in the graph, such that no two pebbles occupy a node at the same time. A variant of the Pebble Motion problem is proposed to model the Train Unit Shunting Problem, where train units are represented by pebbles and the arrival and departure of train unit combinations are also included. This paper specifically looks at dead-end track shunting yards, as they can be abstractly represented by trees, such that trains arrive and depart at the root node. Furthermore, trains cannot be reallocated between arrival and departure in the tree, since reallocation in practice is a very costly process as moves need to be performed by a small set of drivers. The conditions for realizing the departure order of trains are studied, and an efficient method to (partially) determine the feasibility of problem instances is given, which can find the minimal number of tracks required to park the trains. Furthermore, a special case with tracks of length two is shown to be polynomially solvable, while another subset of problem instances with tracks of length six or more is demonstrated to be NP-complete.},
  abbr             = {ICAPS},
  pdf              = {icaps23.pdf},
  html             = {https://ojs.aaai.org/index.php/ICAPS/article/view/27228},
  selected         = {true},
  supp             = {icaps23_sup.pdf},
  poster           = {poster_icaps23.pdf},
}
@Inproceedings{Hanou2024replanning,
  author           = {Issa Hanou* and Devin Wild Thomas* and Wheeler Ruml and Mathijs De Weerdt},
  title            = {Replanning in Advance for Instant Delay Recovery in Multi-Agent Applications: Rerouting Trains in a Railway Hub},
  booktitle        = {Proceedings of the Thirty-Fourth International Conference on Automated Planning and Scheduling},
  volume           = {34},
  year             = {2024},
  abstract         = {
    Train routing is sensitive to delays that occur in the network. When a train is delayed, it is imperative that a new plan be found quickly, or else other trains may need to be stopped to ensure safety, potentially causing cascading delays. In this paper, we consider this class of multi-agent planning problems, which we call Multi-Agent Execution Delay Replanning. We show that these can be solved by reducing the problem to an any-start-time safe interval path planning problem. When an agent has an any-start-time plan, it can react to a delay by simply looking up the precomputed plan for the delayed start time. We identify crucial real-world problem characteristics like the agent's speed, size, and safety envelope, and extend the any-start-time planning to account for them. Experimental results on real-world train networks show that any-start-time plans are compact and can be computed in reasonable time while enabling agents to instantly recover a safe plan.
  },
  abbr             = {ICAPS},
  pdf              = {icaps24.pdf},
  html             = {https://ojs.aaai.org/index.php/ICAPS/article/view/31483},
  code             = {https://github.com/dwthomas/delay-replanning},
  selected         = {true},
  poster           = {poster_icaps24.pdf}
}
@InCollection{Hanou2024aIncreasing,
  author           = {Issa Hanou and Sebastijan Duman\v{c}i\'{c} and Mathijs De Weerdt and Roel Van Den Broek and Paul Van Der Voort and Marjan Van Den Akker},
  title            = {Increasing the Capacity of Shunting Yards within the Current Infrastructure: A Computational Perspective},
  booktitle        = {Lecture Notes in Mobility},
  publisher        = {Springer},
  year             = {2024},
  abstract         = {With a dense infrastructure and limited space, the opportunities for increasing the capacity of the railway network in the Netherlands are limited. There are many components included in the problem, and previous research often focuses on a subset of these. We introduce a framework for positioning previous research along an axis of abstractions and highlight a promising future direction: the development of a new approach that combines previous approaches and methods.},
  abbr             = {TRA},
  pdf              = {tra24.pdf},
  selected         = {false},
  tobepublished    = {true},
  poster           = {poster_tra24.pdf},
}
@mastersthesis{Hanou2022Applying,
  author           = {Issa Hanou},
  title            = {Applying the Pebble Motion problem: studying the feasibility of the Train Unit Shunting Problem},
  school           = {Delft University of Technology},
  year             = {2022},
  note             = {MSc thesis},
  abstract         = {Shunting yards are the locations where trains, which are not included in the train schedule at a certain time, are parked until they are required again. Managing the parking of the trains such that all trains can leave at the desired time is a complicated task, and results in the problem formally known as the Train Unit Shunting Problem (TUSP). This problem is an NP-hard problem, and current algorithms cannot always determine whether an instance is feasible. We analyze a simplified variant of the TUSP, leaving out details from the real-world scenario to study the theoretical conditions for basic scenarios to be feasible. To this extent, we identify essential elements of the TUSP and include these in a modification of the Pebble Motion problem. Based on this Pebble Motion variant, we establish new problems that can be studied to analyze the feasibility of the TUSP. For each of these problems, we examine the complexity and look into different solution approaches.},
  abbr             = {TU Delft},
  pdf              = {masterthesis.pdf},
  html             = {https://repository.tudelft.nl/islandora/object/uuid:2ca12cd2-315e-4a31-9a2a-67a77d8988bf},
}
@preprint{Hanou2025Revisiting,
  title={Revisiting Landmarks: Learning from Previous Plans to Generalize over Problem Instances}, 
  author={Issa Hanou and Sebastijan Duman\v{c}i\'{c} and Mathijs De Weerdt},
  year={2025},
  eprint={2508.21564},
  archivePrefix={arXiv},
  primaryClass={cs.AI},
  html={https://arxiv.org/abs/2508.21564},
  abbr={arXiv},
  abstract={We propose a new framework for discovering landmarks that automatically generalize across a domain. These generalized landmarks are learned from a set of solved instances and describe intermediate goals for planning problems where traditional landmark extraction algorithms fall short. Our generalized landmarks extend beyond the predicates of a domain by using state functions that are independent of the objects of a specific problem and apply to all similar objects, thus capturing repetition. Based on these functions, we construct a directed generalized landmark graph that defines the landmark progression, including loop possibilities for repetitive subplans. We show how to use this graph in a heuristic to solve new problem instances of the same domain. Our results show that the generalized landmark graphs learned from a few small instances are also effective for larger instances in the same domain. If a loop that indicates repetition is identified, we see a significant improvement in heuristic performance over the baseline. Generalized landmarks capture domain information that is interpretable and useful to an automated planner. This information can be discovered from a small set of plans for the same domain.},
}
@misc{Hanou2025MultiAgent,
  author={Issa Hanou and Mathijs De Weerdt},
  title={Multi-Agent Pathfinding for Railway Routing},
  year={2025},
  abbr={RailDresden},
  venue={RailDresden 2025: 11th International Conference on Railway Operations Modelling and Analysis - Technische Universit√§t Dresden, Dresden, Germany},
  html={https://research.tudelft.nl/en/publications/multi-agent-pathfinding-for-railway-routing},
  abstract={Research in railway operations has mostly focused on operations research methods. However, these real-world problems have a state-based nature, which makes them very suitable for AI models, such as the Multi-Agent Pathfinding problem, where agents move in a grid and need to be routed from their start to their goal location without colliding with each other. The core aspect of problems like train shunting and train dispatching is routing, which is often not the main focus of current mathematical formulations. Therefore, we apply the state-of-the-art algorithms to the railway problems of shunting and dispatching and study their usability for routing trains. The Multi-Agent Pathfinding problem is often solved with one of two algorithms: conflict-based search (a two-stage algorithm detecting conflicts between individual paths and using A* search to find new conflict-free paths), and branch-cut-and-price (a linear program adding cuts (row generation) based on problem-specific constraints, and finding new paths to be selected that satisfy all constraints using a pricer). We modify these algorithms to include more railway details. First, we allow for the matching of train units (i.e., ensure the necessary train units of a certain type are available for departure) by specifying goals for agent (type) groups instead of single agent goals. Moreover, we add goal sequences for servicing stations and agents of different sizes, and we study specific aspects of the railway infrastructure to exploit in the algorithm. Finally, we show the use of Multi-Agent Pathfinding solvers in different railway settings and analyze the conditions for success.},
  poster={poster_raildresden25.pdf}
}